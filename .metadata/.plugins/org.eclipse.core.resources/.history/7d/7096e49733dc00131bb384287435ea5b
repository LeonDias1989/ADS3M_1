package arvore_bin;

public class ArvoreBin {

	public void inserir(Nodo n, int valor) {

		if (n.getDado() > valor) {

			if (n.getEsq() != null) {
				inserir(n.getEsq(), valor);
			} else {

				Nodo novoNodo = new Nodo(valor);
				n.setEsq(novoNodo);
			}
		} else if (n.getDado() < valor) {

			if (n.getDir() != null) {
				inserir(n.getDir(), valor);
			} else {

				Nodo novoNodo = new Nodo(valor);
				n.setDir(novoNodo);
			}
		}

	}

	public int getRaiz(Nodo n) {

		return n.getDado();
	}

	public void travessivaPre(Nodo n) {

		if (n != null) {

			System.out.print(n.getDado());
			travessivaPre(n.getEsq());
			travessivaPre(n.getDir());
		} else
			System.err.println("Sem nodos na árvore");

	}

	public void travessivaPos(Nodo n) {

		if (n != null) {
			travessivaPre(n.getEsq());
			travessivaPre(n.getDir());
			System.out.print(n.getDado());

		} else
			System.err.println("Sem nodos na árvore");
	}

	public void travessivaInfixa(Nodo n) {

		if (n != null) {
			travessivaPre(n.getEsq());
			System.out.print(n.getDado());
			travessivaPre(n.getDir());

		} else
			System.err.println("Sem nodos na árvore");
	}
	
	public static void main(String[] args) {
		
		Nodo n = new Nodo(3);
		
		ArvoreBin ab = new ArvoreBin();
		
		ab.inserir(n, 2);
		ab.inserir(n, 5);
		ab.inserir(n, 2);
		
		
	}

}
