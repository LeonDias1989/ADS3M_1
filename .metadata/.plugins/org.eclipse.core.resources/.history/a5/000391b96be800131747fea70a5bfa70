package arvore_bin;

public class TreeGenericDate<T extends Comparable<T>> {

	public TreeGenericDate() {
		super();

	}

	public void inserir(Nod<T> n, T valor) {

		int compare = n.getDado().compareTo(valor);

		if (compare > 0) {

			if (n.getEsq() != null) {
				inserir(n.getEsq(), valor);
			} else {

				Nod<T> novoNodo = new Nod<>(valor);
				n.setEsq(novoNodo);
			}
		} else if (compare < 0) {

			if (n.getDir() != null) {
				inserir(n.getDir(), valor);
			} else {

				Nod<T> novoNodo = new Nod<>(valor);
				n.setDir(novoNodo);
			}
		}

	}

	public T getRaiz(Nod<T> nodo) {

		return nodo.getDado();
	}

	public void travessiaPre(Nod<T> nodo) {
		if (nodo != null) {

			nodo.imprimePrefixa();
		}
	}

	public void travessiaPos(Nod<T> nodo) {
		if (nodo != null) {

			nodo.imprimePosFixa();
		}
	}

	public void travessiaInf(Nod<T> nodo) {
		if (nodo != null) {
			nodo.imprimeInfixa();
		}
	}

}
