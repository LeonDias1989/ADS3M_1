package Estrutura;

public class ListaOrdenada extends ListaDuplamenteEncadeada{

	public ListaOrdenada() {

		super();
	}

	public ListaDuplamenteEncadeada bubbleSortNewList() {

		ListaDuplamenteEncadeada listAux = new ListaDuplamenteEncadeada();

		for (Nodo i = começo; i != fim; i = i.getProximo()) {

			listAux.adicionaNoComeco(i.getDado());
		}
		listAux.adicionaNoComeco(fim.getDado());

		for (int i = 0; i < totalElementos; i++) {
			for (int j = i + 1; j < totalElementos; j++) {

				String a = listAux.getElemento(i).getDado().toString();
				String b = listAux.getElemento(j).getDado().toString();

				int result = a.compareTo(b);

				if (result > 0) {

					Object aux = listAux.getElemento(i).getDado();
					listAux.getElemento(i).setDado(
							listAux.getElemento(j).getDado());
					listAux.getElemento(j).setDado(aux);
				}

			}

		}
		return listAux;

	}

	public void ordenarPorBubble() {

		for (int i = 0; i < totalElementos; i++) {
			for (int j = i + 1; j < totalElementos; j++) {

				Object x = getElemento(i).getDado();
				Object y = getElemento(j).getDado();

				if (x instanceof Comparable && y instanceof Comparable) {

					int comparacao;

					comparacao = ((Comparable) x).compareTo((Comparable) y);

					if (comparacao > 0) {

						Object aux2 = getElemento(j).getDado();
						getElemento(j).setDado(getElemento(i).getDado());
						getElemento(i).setDado(aux2);
					}
				}
			}
		}
	}

}
